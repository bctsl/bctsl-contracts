[
  {
    "namespace": {
      "name": "ListInternal",
      "typedefs": []
    }
  },
  {
    "namespace": {
      "name": "List",
      "typedefs": []
    }
  },
  {
    "namespace": {
      "name": "String",
      "typedefs": []
    }
  },
  {
    "contract": {
      "event": {
        "variant": [
          {
            "Transfer": [
              "address",
              "address",
              "int"
            ]
          },
          {
            "Allowance": [
              "address",
              "address",
              "int"
            ]
          },
          {
            "Burn": [
              "address",
              "int"
            ]
          },
          {
            "Mint": [
              "address",
              "int"
            ]
          },
          {
            "Swap": [
              "address",
              "int"
            ]
          }
        ]
      },
      "functions": [
        {
          "arguments": [],
          "name": "aex9_extensions",
          "payable": false,
          "returns": {
            "list": [
              "string"
            ]
          },
          "stateful": false
        },
        {
          "arguments": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "decimals",
              "type": "int"
            },
            {
              "name": "symbol",
              "type": "string"
            },
            {
              "name": "initial_owner_balance",
              "type": {
                "option": [
                  "int"
                ]
              }
            }
          ],
          "name": "init",
          "payable": false,
          "returns": "FungibleTokenFull.state",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "meta_info",
          "payable": false,
          "returns": "FungibleTokenFull.meta_info",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "total_supply",
          "payable": false,
          "returns": "int",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "owner",
          "payable": false,
          "returns": "address",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "balances",
          "payable": false,
          "returns": "FungibleTokenFull.balances",
          "stateful": false
        },
        {
          "arguments": [
            {
              "name": "account",
              "type": "address"
            }
          ],
          "name": "balance",
          "payable": false,
          "returns": {
            "option": [
              "int"
            ]
          },
          "stateful": false
        },
        {
          "arguments": [],
          "name": "swapped",
          "payable": false,
          "returns": {
            "map": [
              "address",
              "int"
            ]
          },
          "stateful": false
        },
        {
          "arguments": [],
          "name": "allowances",
          "payable": false,
          "returns": "FungibleTokenFull.allowances",
          "stateful": false
        },
        {
          "arguments": [
            {
              "name": "allowance_accounts",
              "type": "FungibleTokenFull.allowance_accounts"
            }
          ],
          "name": "allowance",
          "payable": false,
          "returns": {
            "option": [
              "int"
            ]
          },
          "stateful": false
        },
        {
          "arguments": [
            {
              "name": "from_account",
              "type": "address"
            }
          ],
          "name": "allowance_for_caller",
          "payable": false,
          "returns": {
            "option": [
              "int"
            ]
          },
          "stateful": false
        },
        {
          "arguments": [
            {
              "name": "from_account",
              "type": "address"
            },
            {
              "name": "to_account",
              "type": "address"
            },
            {
              "name": "value",
              "type": "int"
            }
          ],
          "name": "transfer_allowance",
          "payable": false,
          "returns": {
            "tuple": []
          },
          "stateful": true
        },
        {
          "arguments": [
            {
              "name": "for_account",
              "type": "address"
            },
            {
              "name": "value",
              "type": "int"
            }
          ],
          "name": "create_allowance",
          "payable": false,
          "returns": {
            "tuple": []
          },
          "stateful": true
        },
        {
          "arguments": [
            {
              "name": "for_account",
              "type": "address"
            },
            {
              "name": "value_change",
              "type": "int"
            }
          ],
          "name": "change_allowance",
          "payable": false,
          "returns": {
            "tuple": []
          },
          "stateful": true
        },
        {
          "arguments": [
            {
              "name": "for_account",
              "type": "address"
            }
          ],
          "name": "reset_allowance",
          "payable": false,
          "returns": {
            "tuple": []
          },
          "stateful": true
        },
        {
          "arguments": [
            {
              "name": "to_account",
              "type": "address"
            },
            {
              "name": "value",
              "type": "int"
            }
          ],
          "name": "transfer",
          "payable": false,
          "returns": {
            "tuple": []
          },
          "stateful": true
        },
        {
          "arguments": [
            {
              "name": "value",
              "type": "int"
            }
          ],
          "name": "burn",
          "payable": false,
          "returns": {
            "tuple": []
          },
          "stateful": true
        },
        {
          "arguments": [
            {
              "name": "account",
              "type": "address"
            },
            {
              "name": "value",
              "type": "int"
            }
          ],
          "name": "mint",
          "payable": false,
          "returns": {
            "tuple": []
          },
          "stateful": true
        },
        {
          "arguments": [],
          "name": "swap",
          "payable": false,
          "returns": {
            "tuple": []
          },
          "stateful": true
        },
        {
          "arguments": [
            {
              "name": "account",
              "type": "address"
            }
          ],
          "name": "check_swap",
          "payable": false,
          "returns": "int",
          "stateful": true
        }
      ],
      "kind": "contract_child",
      "name": "FungibleTokenFull",
      "payable": false,
      "state": {
        "record": [
          {
            "name": "owner",
            "type": "address"
          },
          {
            "name": "total_supply",
            "type": "int"
          },
          {
            "name": "balances",
            "type": "FungibleTokenFull.balances"
          },
          {
            "name": "meta_info",
            "type": "FungibleTokenFull.meta_info"
          },
          {
            "name": "allowances",
            "type": "FungibleTokenFull.allowances"
          },
          {
            "name": "swapped",
            "type": {
              "map": [
                "address",
                "int"
              ]
            }
          }
        ]
      },
      "typedefs": [
        {
          "name": "meta_info",
          "typedef": {
            "record": [
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "symbol",
                "type": "string"
              },
              {
                "name": "decimals",
                "type": "int"
              }
            ]
          },
          "vars": []
        },
        {
          "name": "allowance_accounts",
          "typedef": {
            "record": [
              {
                "name": "from_account",
                "type": "address"
              },
              {
                "name": "for_account",
                "type": "address"
              }
            ]
          },
          "vars": []
        },
        {
          "name": "balances",
          "typedef": {
            "map": [
              "address",
              "int"
            ]
          },
          "vars": []
        },
        {
          "name": "allowances",
          "typedef": {
            "map": [
              "FungibleTokenFull.allowance_accounts",
              "int"
            ]
          },
          "vars": []
        }
      ]
    }
  },
  {
    "contract": {
      "functions": [
        {
          "arguments": [
            {
              "name": "_1",
              "type": "int"
            }
          ],
          "name": "price",
          "payable": false,
          "returns": "int",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "token_contract",
          "payable": false,
          "returns": "FungibleTokenFull",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "sale_type",
          "payable": false,
          "returns": "string",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "version",
          "payable": false,
          "returns": "int",
          "stateful": false
        },
        {
          "arguments": [
            {
              "name": "_1",
              "type": "int"
            }
          ],
          "name": "buy",
          "payable": true,
          "returns": "unit",
          "stateful": true
        },
        {
          "arguments": [
            {
              "name": "_1",
              "type": "int"
            },
            {
              "name": "_2",
              "type": "address"
            }
          ],
          "name": "buy_with_affiliation",
          "payable": true,
          "returns": "unit",
          "stateful": true
        },
        {
          "arguments": [
            {
              "name": "_1",
              "type": "address"
            }
          ],
          "name": "set_beneficiary",
          "payable": false,
          "returns": "unit",
          "stateful": true
        },
        {
          "arguments": [],
          "name": "beneficiary",
          "payable": false,
          "returns": "address",
          "stateful": false
        },
        {
          "arguments": [
            {
              "name": "_1",
              "type": "address"
            }
          ],
          "name": "set_owner",
          "payable": false,
          "returns": "unit",
          "stateful": true
        },
        {
          "arguments": [],
          "name": "owner",
          "payable": false,
          "returns": "address",
          "stateful": false
        }
      ],
      "kind": "contract_interface",
      "name": "TokenSale",
      "payable": false,
      "typedefs": []
    }
  },
  {
    "namespace": {
      "name": "Option",
      "typedefs": []
    }
  },
  {
    "namespace": {
      "name": "Pair",
      "typedefs": []
    }
  },
  {
    "namespace": {
      "name": "Set",
      "typedefs": [
        {
          "name": "set",
          "typedef": {
            "record": [
              {
                "name": "to_map",
                "type": {
                  "map": [
                    "'a",
                    "unit"
                  ]
                }
              }
            ]
          },
          "vars": [
            {
              "name": "'a"
            }
          ]
        }
      ]
    }
  },
  {
    "contract": {
      "event": {
        "variant": [
          {
            "ChangeMinimumTokenThreshold": [
              "int"
            ]
          },
          {
            "AddModerator": [
              "address"
            ]
          },
          {
            "DeleteModerator": [
              "address"
            ]
          },
          {
            "MuteUserId": [
              "string"
            ]
          },
          {
            "UnmuteUserId": [
              "string"
            ]
          },
          {
            "SetOwner": [
              "address"
            ]
          },
          {
            "ChangedMetaInfo": []
          }
        ]
      },
      "functions": [
        {
          "arguments": [
            {
              "name": "initial_moderator",
              "type": "address"
            },
            {
              "name": "minimum_token_threshold",
              "type": "int"
            },
            {
              "name": "is_private",
              "type": "bool"
            },
            {
              "name": "meta_info",
              "type": "CommunityManagement.meta_info"
            }
          ],
          "name": "init",
          "payable": false,
          "returns": "CommunityManagement.state",
          "stateful": true
        },
        {
          "arguments": [],
          "name": "get_state",
          "payable": false,
          "returns": "CommunityManagement.state",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "moderator_accounts",
          "payable": false,
          "returns": {
            "Set.set": [
              "address"
            ]
          },
          "stateful": false
        },
        {
          "arguments": [],
          "name": "muted_user_ids",
          "payable": false,
          "returns": {
            "Set.set": [
              "string"
            ]
          },
          "stateful": false
        },
        {
          "arguments": [],
          "name": "minimum_token_threshold",
          "payable": false,
          "returns": "int",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "owner",
          "payable": false,
          "returns": "address",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "meta_info",
          "payable": false,
          "returns": "CommunityManagement.meta_info",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "version",
          "payable": false,
          "returns": "int",
          "stateful": false
        },
        {
          "arguments": [
            {
              "name": "minimum_token_threshold",
              "type": "int"
            }
          ],
          "name": "change_minimum_token_threshold",
          "payable": false,
          "returns": {
            "tuple": []
          },
          "stateful": true
        },
        {
          "arguments": [
            {
              "name": "moderator",
              "type": "address"
            }
          ],
          "name": "add_moderator",
          "payable": false,
          "returns": {
            "tuple": []
          },
          "stateful": true
        },
        {
          "arguments": [
            {
              "name": "moderator",
              "type": "address"
            }
          ],
          "name": "delete_moderator",
          "payable": false,
          "returns": {
            "tuple": []
          },
          "stateful": true
        },
        {
          "arguments": [
            {
              "name": "user_id",
              "type": "string"
            }
          ],
          "name": "mute_user_id",
          "payable": false,
          "returns": {
            "tuple": []
          },
          "stateful": true
        },
        {
          "arguments": [
            {
              "name": "user_id",
              "type": "string"
            }
          ],
          "name": "unmute_user_id",
          "payable": false,
          "returns": {
            "tuple": []
          },
          "stateful": true
        },
        {
          "arguments": [
            {
              "name": "meta_info",
              "type": "CommunityManagement.meta_info"
            }
          ],
          "name": "change_meta_info",
          "payable": false,
          "returns": {
            "tuple": []
          },
          "stateful": true
        },
        {
          "arguments": [
            {
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "set_owner",
          "payable": false,
          "returns": {
            "tuple": []
          },
          "stateful": true
        }
      ],
      "kind": "contract_child",
      "name": "CommunityManagement",
      "payable": false,
      "state": {
        "record": [
          {
            "name": "owner",
            "type": "address"
          },
          {
            "name": "minimum_token_threshold",
            "type": "int"
          },
          {
            "name": "is_private",
            "type": "bool"
          },
          {
            "name": "moderator_accounts",
            "type": {
              "Set.set": [
                "address"
              ]
            }
          },
          {
            "name": "muted_user_ids",
            "type": {
              "Set.set": [
                "string"
              ]
            }
          },
          {
            "name": "meta_info",
            "type": "CommunityManagement.meta_info"
          }
        ]
      },
      "typedefs": [
        {
          "name": "meta_info",
          "typedef": {
            "map": [
              "string",
              "string"
            ]
          },
          "vars": []
        }
      ]
    }
  },
  {
    "contract": {
      "functions": [
        {
          "arguments": [],
          "name": "is_dao",
          "payable": false,
          "returns": "bool",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "get_community_management",
          "payable": false,
          "returns": {
            "option": [
              "CommunityManagement"
            ]
          },
          "stateful": false
        },
        {
          "arguments": [
            {
              "name": "_1",
              "type": "address"
            },
            {
              "name": "_2",
              "type": "int"
            }
          ],
          "name": "record_sale_transaction",
          "payable": true,
          "returns": "unit",
          "stateful": true
        }
      ],
      "kind": "contract_interface",
      "name": "ReplaceableDAO",
      "payable": false,
      "typedefs": []
    }
  },
  {
    "namespace": {
      "name": "VoteSubjects",
      "typedefs": [
        {
          "name": "subject",
          "typedef": {
            "variant": [
              {
                "VotePayout": [
                  "address"
                ]
              },
              {
                "VotePayoutAmount": [
                  "address",
                  "int"
                ]
              },
              {
                "ChangeDAO": [
                  "address"
                ]
              },
              {
                "ChangeMetaInfo": [
                  {
                    "map": [
                      "string",
                      "string"
                    ]
                  }
                ]
              },
              {
                "ChangeMinimumTokenThreshold": [
                  "int"
                ]
              },
              {
                "AddModerator": [
                  "address"
                ]
              },
              {
                "DeleteModerator": [
                  "address"
                ]
              }
            ]
          },
          "vars": []
        }
      ]
    }
  },
  {
    "contract": {
      "event": {
        "variant": [
          {
            "Vote": [
              "address",
              "DAOVote.vote_option",
              "DAOVote.amount"
            ]
          },
          {
            "RevokeVote": [
              "address",
              "DAOVote.vote_option",
              "DAOVote.amount"
            ]
          },
          {
            "Withdraw": [
              "address",
              "DAOVote.amount"
            ]
          }
        ]
      },
      "functions": [
        {
          "arguments": [
            {
              "name": "metadata",
              "type": "DAOVote.metadata"
            },
            {
              "name": "token",
              "type": "FungibleTokenFull"
            },
            {
              "name": "author",
              "type": "address"
            }
          ],
          "name": "init",
          "payable": false,
          "returns": "DAOVote.state",
          "stateful": false
        },
        {
          "arguments": [
            {
              "name": "option",
              "type": "DAOVote.vote_option"
            },
            {
              "name": "amount",
              "type": "DAOVote.amount"
            }
          ],
          "name": "vote",
          "payable": false,
          "returns": {
            "tuple": []
          },
          "stateful": true
        },
        {
          "arguments": [],
          "name": "revoke_vote",
          "payable": false,
          "returns": {
            "tuple": []
          },
          "stateful": true
        },
        {
          "arguments": [],
          "name": "withdraw",
          "payable": false,
          "returns": {
            "tuple": []
          },
          "stateful": true
        },
        {
          "arguments": [],
          "name": "get_state",
          "payable": false,
          "returns": "DAOVote.state",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "close_height",
          "payable": false,
          "returns": "int",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "metadata",
          "payable": false,
          "returns": "DAOVote.metadata",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "subject",
          "payable": false,
          "returns": "VoteSubjects.subject",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "token",
          "payable": false,
          "returns": "FungibleTokenFull",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "vote_accounts",
          "payable": false,
          "returns": "DAOVote.vote_accounts",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "current_vote_state",
          "payable": false,
          "returns": "DAOVote.vote_state",
          "stateful": false
        },
        {
          "arguments": [
            {
              "name": "voter",
              "type": "address"
            }
          ],
          "name": "has_voted",
          "payable": false,
          "returns": "bool",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "is_closed",
          "payable": false,
          "returns": "bool",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "version",
          "payable": false,
          "returns": "int",
          "stateful": false
        },
        {
          "arguments": [
            {
              "name": "voter",
              "type": "address"
            }
          ],
          "name": "has_withdrawn",
          "payable": false,
          "returns": {
            "option": [
              "bool"
            ]
          },
          "stateful": false
        },
        {
          "arguments": [],
          "name": "final_vote_state",
          "payable": false,
          "returns": {
            "option": [
              "DAOVote.vote_state"
            ]
          },
          "stateful": false
        },
        {
          "arguments": [
            {
              "name": "voter",
              "type": "address"
            }
          ],
          "name": "voted_option",
          "payable": false,
          "returns": {
            "option": [
              "DAOVote.vote_option"
            ]
          },
          "stateful": false
        }
      ],
      "kind": "contract_child",
      "name": "DAOVote",
      "payable": false,
      "state": {
        "record": [
          {
            "name": "metadata",
            "type": "DAOVote.metadata"
          },
          {
            "name": "close_height",
            "type": "int"
          },
          {
            "name": "create_height",
            "type": "int"
          },
          {
            "name": "vote_state",
            "type": "DAOVote.vote_state"
          },
          {
            "name": "vote_accounts",
            "type": "DAOVote.vote_accounts"
          },
          {
            "name": "token",
            "type": "FungibleTokenFull"
          },
          {
            "name": "author",
            "type": "address"
          }
        ]
      },
      "typedefs": [
        {
          "name": "vote_option",
          "typedef": "bool",
          "vars": []
        },
        {
          "name": "amount",
          "typedef": "int",
          "vars": []
        },
        {
          "name": "vote_state",
          "typedef": {
            "map": [
              "DAOVote.vote_option",
              "DAOVote.amount"
            ]
          },
          "vars": []
        },
        {
          "name": "vote_accounts",
          "typedef": {
            "map": [
              "address",
              {
                "tuple": [
                  "DAOVote.amount",
                  "DAOVote.vote_option",
                  "bool"
                ]
              }
            ]
          },
          "vars": []
        },
        {
          "name": "metadata",
          "typedef": {
            "record": [
              {
                "name": "subject",
                "type": "VoteSubjects.subject"
              },
              {
                "name": "description",
                "type": "string"
              },
              {
                "name": "link",
                "type": "string"
              }
            ]
          },
          "vars": []
        }
      ]
    }
  },
  {
    "contract": {
      "functions": [
        {
          "arguments": [
            {
              "name": "_1",
              "type": "TokenSale"
            }
          ],
          "name": "get_community_management",
          "payable": false,
          "returns": "CommunityManagement",
          "stateful": false
        }
      ],
      "kind": "contract_interface",
      "name": "Factory",
      "payable": false,
      "typedefs": []
    }
  },
  {
    "contract": {
      "event": {
        "variant": [
          {
            "VoteAdded": [
              "DAOVote",
              "int"
            ]
          },
          {
            "AppliedVoteSubject": [
              "DAOVote",
              "int"
            ]
          }
        ]
      },
      "functions": [
        {
          "arguments": [
            {
              "name": "token_sale",
              "type": {
                "option": [
                  "TokenSale"
                ]
              }
            },
            {
              "name": "factory_address",
              "type": "address"
            }
          ],
          "name": "init",
          "payable": false,
          "returns": "DAO.state",
          "stateful": true
        },
        {
          "arguments": [],
          "name": "get_token",
          "payable": false,
          "returns": "FungibleTokenFull",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "votes",
          "payable": false,
          "returns": "DAO.votes",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "vote_timeout",
          "payable": false,
          "returns": "int",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "factory",
          "payable": false,
          "returns": "Factory",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "get_state",
          "payable": false,
          "returns": "DAO.state",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "get_token_sale",
          "payable": false,
          "returns": "TokenSale",
          "stateful": false
        },
        {
          "arguments": [
            {
              "name": "buyer",
              "type": "address"
            },
            {
              "name": "buy_price",
              "type": "int"
            }
          ],
          "name": "record_sale_transaction",
          "payable": true,
          "returns": {
            "tuple": []
          },
          "stateful": true
        },
        {
          "arguments": [],
          "name": "get_community_management",
          "payable": false,
          "returns": {
            "option": [
              "CommunityManagement"
            ]
          },
          "stateful": false
        },
        {
          "arguments": [],
          "name": "is_dao",
          "payable": false,
          "returns": "bool",
          "stateful": false
        },
        {
          "arguments": [],
          "name": "version",
          "payable": false,
          "returns": "int",
          "stateful": false
        },
        {
          "arguments": [
            {
              "name": "token_sale",
              "type": "TokenSale"
            }
          ],
          "name": "set_token_sale",
          "payable": false,
          "returns": {
            "tuple": []
          },
          "stateful": true
        },
        {
          "arguments": [
            {
              "name": "metadata",
              "type": "DAOVote.metadata"
            }
          ],
          "name": "add_vote",
          "payable": true,
          "returns": {
            "tuple": [
              "int",
              "DAOVote"
            ]
          },
          "stateful": true
        },
        {
          "arguments": [
            {
              "name": "vote_seq_id",
              "type": "int"
            }
          ],
          "name": "apply_vote_subject",
          "payable": false,
          "returns": {
            "tuple": []
          },
          "stateful": true
        }
      ],
      "kind": "contract_main",
      "name": "DAO",
      "payable": true,
      "state": {
        "record": [
          {
            "name": "token_sale",
            "type": {
              "option": [
                "TokenSale"
              ]
            }
          },
          {
            "name": "votes",
            "type": "DAO.votes"
          },
          {
            "name": "vote_timeout",
            "type": "int"
          },
          {
            "name": "factory",
            "type": "Factory"
          }
        ]
      },
      "typedefs": [
        {
          "name": "votes",
          "typedef": {
            "map": [
              "int",
              {
                "tuple": [
                  "bool",
                  "DAOVote"
                ]
              }
            ]
          },
          "vars": []
        }
      ]
    }
  }
]